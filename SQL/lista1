1. SHOW TABLES;
2. SELECT title FROM film WHERE length>120;
3. SELECT title FROM film WHERE rating='G' ORDER BY length ASC LIMIT 4;
4. SELECT title, name FROM film JOIN language ON film.language_id=language.language_id WHERE description LIKE '%drama%';
5. SELECT title FROM film JOIN film_category ON film.film_id=film_category.film_id JOIN category ON film_category.category_id=category.category_id WHERE category.name='Family' AND description LIKE '%Documentary%';
6. SELECT title FROM film JOIN film_category ON film.film_id = film_category.film_id JOIN category ON film_category.category_id = category.category_id WHERE category.name = 'Children' AND rating <> 'G';
7. SELECT rating, COUNT(film_id) AS ilosc FROM film GROUP BY rating;
8. SELECT DISTINCT title FROM film JOIN inventory ON film.film_id = inventory.film_id JOIN rental ON inventory.inventory_id = rental.inventory_id WHERE DATE(rental_date) BETWEEN '2005-05-31' AND '2005-06-15' ORDER BY title ASC;
9. SELECT DISTINCT first_name, last_name FROM actor JOIN film_actor ON actor.actor_id = film_actor.actor_id JOIN film ON film_actor.film_id = film.film_id WHERE special_features LIKE '%Deleted Scenes%';
10. SELECT DISTINCT first_name, last_name FROM customer JOIN rental ON customer.customer_id = rental.customer_id JOIN payment ON rental.rental_id = payment.rental_id WHERE rental.staff_id <> payment.staff_id;
11. SELECT first_name, last_name FROM customer JOIN rental ON customer.customer_id = rental.customer_id GROUP BY customer.customer_id HAVING COUNT(rental_id)>(SELECT COUNT(rental_id) FROM rental JOIN customer ON rental.customer_id=customer.customer_id WHERE customer.email='MARY.SMITH@sakilacustomer.org');
12. SELECT tab1.actor_id, tab2.actor_id FROM film_actor AS tab1, film_actor AS tab2 WHERE tab1.actor_id < tab2.actor_id AND tab1.film_id=tab2.film_id GROUP BY tab1.actor_id, tab2.actor_id HAVING COUNT(*) > 1;
13. SELECT last_name FROM actor WHERE actor_id NOT IN (SELECT DISTINCT actor_id FROM film_actor JOIN film ON film_actor.film_id=film.film_id WHERE title LIKE 'C%');
14. SELECT last_name FROM actor WHERE (SELECT COUNT(*) FROM film_actor AS fa JOIN film_category AS fc ON fa.film_id=fc.film_id JOIN category AS c ON fc.category_id=c.category_id WHERE actor.actor_id=fa.actor_id AND c.name='Action') > (SELECT COUNT(*) FROM film_actor AS fa JOIN film_category AS fc ON fa.film_id=fc.film_id JOIN category AS c ON fc.category_id=c.category_id WHERE actor.actor_id=fa.actor_id AND c.name='Horror');
15. SELECT customer_id FROM customer WHERE (SELECT AVG(amount) FROM payment WHERE payment.customer_id=customer.customer_id)<(SELECT AVG(amount) FROM payment WHERE DATE(payment_date)='2005-07-30');
16. UPDATE film SET language_id=(SELECT language_id FROM language WHERE name='Italian') WHERE title='Young Language';
17. INSERT INTO language(name) VALUES ('Spanish');
UPDATE film SET language_id=(SELECT language_id FROM language WHERE name='Spanish') WHERE film_id IN (SELECT film_id FROM film_actor AS fa JOIN actor ON fa.actor_id=actor.actor_id WHERE first_name='ED' AND last_name='CHASE');
18. ALTER TABLE language ADD films_no int AFTER name;
UPDATE language SET films_no=(SELECT COUNT(*) FROM film WHERE film.language_id=language.language_id);
19. ALTER TABLE film DROP COLUMN release_year;
